# Summary
# This reusable workflow handles building UE4SS with CMake, including setup of dependencies and uploading of artifacts.
name: "Build UE4SS with CMake"
permissions:
  contents: read
on:
  workflow_call:
    inputs:
      build-mode:
        description: 'Which UE4SS Mode to build (e.g., Game__Shipping__Win64)'
        type: string
        required: true
      commit-sha:
        description: 'Commit to build'
        type: string
        required: true
      should-upload-artifact:
        description: 'Should build output be uploaded as an artifact?'
        type: boolean
        default: false
      artifact-retention-days:
        description: 'How many days to retain artifacts'
        type: number
        default: 7
defaults:
  run:
    shell: pwsh
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.UEPSEUDO_PAT }}
          ref: ${{inputs.commit-sha}}

      - name: Get current week as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install VS2022 BuildTools 17.9.7
        run: choco install -y visualstudio2022buildtools --version=117.9.7.0 --params "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --installChannelUri https://aka.ms/vs/17/release/180911598_-255012421/channel"

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 'latest'
          
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Create build directory name
        id: build_dir
        run: |
          $mode = "${{inputs.build-mode}}"
          $buildDir = "build_cmake_$mode"
          echo "name=$buildDir" >> $env:GITHUB_OUTPUT

      # FIXED: Combined Configure and Build, added proxy target
      - name: Configure and Build
        run: |
          Import-Module 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll'
          Enter-VsDevShell -VsInstallPath 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools' -DevCmdArguments '-arch=x64 -host_arch=x64'
          
          cmake -B ${{ steps.build_dir.outputs.name }} `
            -G Ninja `
            -DCMAKE_BUILD_TYPE="${{inputs.build-mode}}" `
            -DCMAKE_C_COMPILER=cl `
            -DCMAKE_CXX_COMPILER=cl `
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          
          # Build both UE4SS and proxy targets
          cmake --build ${{ steps.build_dir.outputs.name }} --target UE4SS
          cmake --build ${{ steps.build_dir.outputs.name }} --target proxy

      # FIXED: Collect all required artifacts including dwmapi.dll
      - name: Calculate Files For Artifact Inclusion
        id: calc-files-artifact
        if: ${{inputs.should-upload-artifact == true}}
        run: |
          $artifact_dir = New-Item -Path '${{runner.temp}}/ue4ss_artifacts/' -ItemType Directory -Force
          $buildDir = "${{ steps.build_dir.outputs.name }}"
          
          # Find and copy UE4SS files
          $files = @("UE4SS.dll", "UE4SS.pdb", "dwmapi.dll")
          foreach ($fileName in $files) {
            $filePath = Get-ChildItem -Path $buildDir -Recurse -Filter $fileName -ErrorAction SilentlyContinue | Select-Object -First 1
            if ($filePath) {
              Write-Host "Found: $($filePath.FullName)"
              Copy-Item $filePath.FullName -Destination $artifact_dir
            } else {
              Write-Host "Warning: $fileName not found"
            }
          }
          
          echo "artifact_dir=$artifact_dir" >> $env:GITHUB_OUTPUT

      - name: Upload a Build Artifact
        if: ${{inputs.should-upload-artifact == true}}
        uses: actions/upload-artifact@v4
        with:
          name: CMAKE-${{inputs.build-mode}}
          path: ${{ steps.calc-files-artifact.outputs.artifact_dir }}
          retention-days: ${{inputs.artifact-retention-days}}
          overwrite: true